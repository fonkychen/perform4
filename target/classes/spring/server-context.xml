<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc  http://www.springframework.org/schema/mvc/spring-mvc.xsd
		">
	  
	 <context:component-scan base-package="cn.aolc.group.performance">
	 
	 </context:component-scan>
	
	 
	 <task:annotation-driven/>
    
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
      <beans:property name="definitions">
        <beans:list>
            <beans:value>classpath:tiles/defs.xml</beans:value>     
            <beans:value>classpath:tiles/defs-club.xml</beans:value>     
            <beans:value>classpath:tiles/defs-funny.xml</beans:value>
            <beans:value>classpath:tiles/defs-chart.xml</beans:value>
            <beans:value>classpath:tiles/defs-service.xml</beans:value>     
            <beans:value>classpath:tiles/defs-connect.xml</beans:value>    
            <beans:value>classpath:tiles/defs-uspace.xml</beans:value>           
            <beans:value>classpath:tiles/wechat-defs.xml</beans:value>
         
        </beans:list>
      </beans:property>
    </beans:bean>
    
	  <beans:bean id="viewResolver" class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
        <beans:constructor-arg>
           <beans:bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver" />
        </beans:constructor-arg>
       
      </beans:bean>
		

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">      
       <beans:property name="location" value="classpath:config.properties"/>      
    </beans:bean>
    
   
    
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
     <mvc:argument-resolvers>
        <beans:bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
        <beans:bean class="org.springframework.security.web.bind.support.AuthenticationPrincipalArgumentResolver"/>       
     </mvc:argument-resolvers>
     <mvc:message-converters>
        <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
        <beans:bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"></beans:bean>
        <beans:bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></beans:bean>
     </mvc:message-converters>
   </mvc:annotation-driven>
    
    <mvc:interceptors> 
      <beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />     
      <beans:bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"></beans:bean>
      <beans:bean class="cn.aolc.group.performance.controller.handler.TilesDefinitionHandlerInterceptor" />     
    </mvc:interceptors>
 
    <beans:bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
      <beans:property name="favorPathExtension" value="false" />
      <beans:property name="favorParameter" value="true" />
      <beans:property name="mediaTypes" >
        <beans:value>
            json=application/json
            xml=application/xml
        </beans:value>
      </beans:property>
   </beans:bean>
   
   <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <beans:property name="host" value="${mail.host}"/>
      <beans:property name="port" value="${mail.port}"></beans:property>
      
      <beans:property name="username" value="${mail.username}"></beans:property>
      <beans:property name="password" value="${mail.password}"></beans:property>
   </beans:bean>
   
   <beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <beans:property name="velocityProperties">
            <beans:value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </beans:value>
        </beans:property>
    </beans:bean>
    
   
   <aop:config>
   <!-- 
        <aop:advisor advice-ref="popularInterceptor" pointcut="within(cn.aolc.group.performance.dwr..*)"/>
     -->
        <aop:advisor advice-ref="controllerInterceptor" pointcut="within(cn.aolc.group.performance.controller..*)"/>
        <aop:advisor advice-ref="serviceInterceptor" pointcut="within(cn.aolc.group.performance.service..*)"/>
       
    </aop:config>
    
    
   
	<beans:import resource="controllers.xml"/>
	
	<beans:import resource="security.xml"/>
	
	<beans:import resource="data-access.xml"/>
	<beans:import resource="jpa-repository.xml"/>
	<!-- 
	<beans:import resource="server-job.xml"/>
	 -->
</beans:beans>